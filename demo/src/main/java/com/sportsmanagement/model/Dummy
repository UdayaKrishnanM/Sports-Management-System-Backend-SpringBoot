package com.sportsmanagement.service;


import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.sportsmanagement.dao.PlayerRepository;
import com.sportsmanagement.dao.RanksRepository;
import com.sportsmanagement.model.Player;
import com.sportsmanagement.model.Ranks;

import java.util.List;


@Service
public class PlayerService {

    @Autowired
    private PlayerRepository playerRepository;

    @Autowired
    private RanksRepository ranksRepository;

    public Player addPlayer(Player player) {
        Ranks ranks = player.getRanks();
        if (ranks != null) {
            ranks.setPlayer(player);
        }
        player.setRanks(ranks);
        return playerRepository.save(player);
    }

    public List<Player> addPlayers(List<Player> players) {
        for (Player player : players) {
            addPlayer(player);
        }
        return players;
    }

    public void deletePlayer(int id) {
        playerRepository.deleteById(id);
    }

    public List<Player> getAllPlayers() {
        return playerRepository.findAll();
    }

    public Player getPlayerById(int id) {
        return playerRepository.findById(id).orElse(null);
    }

//    public List<Player> getTopPlayersFromODIRank() {
//        return playerRepository.findTop11PlayersByOrderByRanksOdiRankAsc();
//    }

    public Player updatePlayerDepartment(int id, String department) {
        Player player = playerRepository.findById(id).orElse(null);
        if (player != null) {
            player.setPlayer_department(department);
            return playerRepository.save(player);
        }
        return null;
    }

    public Player updatePlayerAge(int id, int age) {
        Player player = playerRepository.findById(id).orElse(null);
        if (player != null) {
            player.setPlayer_age(age);
            return playerRepository.save(player);
        }
        return null;
    }
}








//	@Autowired
//    private PlayerRepository playerRepository;
//
//    public PlayerService(PlayerRepository playerRepository) {
//        this.playerRepository = playerRepository;
//    }
//
//    public List<Player> getAllPlayers() {
//        return playerRepository.findAll();
//    }
//
//    public Player getPlayerById(int id) {
//        Optional<Player> playerOptional = playerRepository.findById(id);
//        return playerOptional.orElse(null);
//    }
//
//    public void addPlayer(Player player) {
//        playerRepository.save(player);
//    }
//
//    public void updatePlayer(Player player) {
//        playerRepository.save(player);
//    }
//
//    public void deletePlayer(int id) {
//        playerRepository.deleteById(id);
//    }



************************







@Entity
@Table(name = "Player")
public class Player {

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private int player_id;

    private String player_name;
    
    private int player_age;
    
    private String player_department;
    
//    @OneToMany(mappedBy = "players", cascade = CascadeType.ALL)
//    private List<Ranks> ranks;

//    @OneToOne(mappedBy = "player_id", cascade = CascadeType.ALL)
////    @OneToOne
//    @PrimaryKeyJoinColumn
//    private Ranks ranks;
    
    @OneToOne(cascade = CascadeType.ALL)
    @PrimaryKeyJoinColumn
    @JoinColumn(name = "player_id", referencedColumnName = "id")
    private Ranks ranks;

    public Player() {
    }

	public int getPlayer_id() {
		return player_id;
	}

	public void setPlayer_id(int player_id) {
		this.player_id = player_id;
	}

	public String getPlayer_name() {
		return player_name;
	}

	public void setPlayer_name(String player_name) {
		this.player_name = player_name;
	}

	public int getPlayer_age() {
		return player_age;
	}

	public void setPlayer_age(int player_age) {
		this.player_age = player_age;
	}

	public String getPlayer_department() {
		return player_department;
	}

	public void setPlayer_department(String player_department) {
		this.player_department = player_department;
	}

	public Ranks getRanks() {
		return ranks;
	}

	public void setRanks(Ranks ranks) {
		this.ranks = ranks;
	}

	public Player(int player_id, String player_name, int player_age, String player_department, Ranks ranks) {
		super();
		this.player_id = player_id;
		this.player_name = player_name;
		this.player_age = player_age;
		this.player_department = player_department;
		this.ranks = ranks;
	}


    
	

}
*****************************************

@Entity
@Table(name = "Ranks", uniqueConstraints={
    @UniqueConstraint(columnNames = {"t20_rank"}),
    @UniqueConstraint(columnNames = {"odi_rank"}),
    @UniqueConstraint(columnNames = {"test_rank"})
})

public class Ranks {

	@Id
	@JoinColumn(name = "player_id", referencedColumnName = "ranks")
    @Column(name = "player_id")
	private int id;

    @Column(unique = true)
    private int odi_rank;

    @Column(unique = true)
    private int t20_rank;

    @Column(unique = true)
    private int test_rank;
    
//    @JsonIgnoreProperties("ranks")
//    @OneToOne
//    @MapsId
//    @JoinColumn(name = "player_id")
//    private Player player;

    
////    @ManyToOne
////    @JoinColumn(name = "player_id", referencedColumnName = "player_id")
//    @ManyToOne
//    @JoinColumn(name = "player_id", nullable = false)
//    private Player players;
//    
    
    
    public Ranks() {
    }

//public Ranks(int id, int odi_rank, int t20_rank, int test_rank, Player player) {
//	super();
//	this.id = id;
//	this.odi_rank = odi_rank;
//	this.t20_rank = t20_rank;
//	this.test_rank = test_rank;
//	this.player = player;
//}

//	public Player getPlayer() {
//		return player;
//	}
//
//	public void setPlayer(Player player) {
//		this.player = player;
//	}

	public int getT20_rank() {
		return t20_rank;
	}

	public void setT20_rank(int t20_rank) {
		this.t20_rank = t20_rank;
	}


	public int getOdi_rank() {
		return odi_rank;
	}


	public void setOdi_rank(int odi_rank) {
		this.odi_rank = odi_rank;
	}


	public int getTest_rank() {
		return test_rank;
	}


	public void setTest_rank(int test_rank) {
		this.test_rank = test_rank;
	}

	public Ranks(int id, int odi_rank, int t20_rank, int test_rank) {
		super();
		this.id = id;
		this.odi_rank = odi_rank;
		this.t20_rank = t20_rank;
		this.test_rank = test_rank;
	}

	
	public int getId() {
		return id;
	}

	public void setId(int id) {
		this.id = id;
	}

  
}









